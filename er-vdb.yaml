apiVersion: teiid.io/v1alpha1
kind: VirtualDatabase
metadata:
  name: ervdb
spec:
  replicas: 1
  expose:
    - LoadBalancer
  datasources:
    - name: er
      type: postgresql
      properties:
        - name: username
          value: naps
        - name: password
          value: naps
        - name: jdbc-url
          value: jdbc:postgresql://postgresql.user1-er-demo.svc.cluster.local:5432/emergency_response_demo
    - name: jbpm
      type: postgresql
      properties:
        - name: username
          value: rhpam
        - name: password
          value: rhpam
        - name: jdbc-url
          value: jdbc:postgresql://process-service-postgresql.user1-er-demo.svc.cluster.local:5432/rhpam
    - name: dw
      type: postgresql
      properties:
        - name: username
          value: naps
        - name: password
          value: naps
        - name: jdbc-url
          value: jdbc:postgresql://dw-postgresql.user1-er-demo.svc.cluster.local:5432/datawarehouse          
  build:
    source:
      ddl: |
        CREATE DATABASE EmergencyResponse OPTIONS (ANNOTATION 'The EmergencyResponse VDB');

        USE DATABASE EmergencyResponse;


        --############ translators ############

        CREATE FOREIGN DATA WRAPPER postgresql;


        --############ Servers ############

        CREATE SERVER "er" FOREIGN DATA WRAPPER postgresql;

        CREATE SERVER "jbpm" FOREIGN DATA WRAPPER postgresql;

        CREATE SERVER "dw" FOREIGN DATA WRAPPER postgresql;


        --############ Schemas ############

        CREATE SCHEMA erdemo SERVER "er";

        CREATE SCHEMA process SERVER "jbpm";

        CREATE SCHEMA datawarehouse SERVER "dw";


        CREATE VIRTUAL SCHEMA EmergencyResponse;


        --############ Schema:datawarehouse ############  

        SET SCHEMA  datawarehouse;

        IMPORT FOREIGN SCHEMA public FROM SERVER dw INTO datawarehouse OPTIONS (
                "importer.useFullSchemaName" 'false');

        --############ Schema:erdemo ############  

        SET SCHEMA  erdemo;

        IMPORT FOREIGN SCHEMA public FROM SERVER er INTO erdemo OPTIONS (
                "importer.useFullSchemaName" 'false', "importer.tableTypes" 'TABLE');

        --### is there a way to just import specific tables, don't want to import ###
        --##everything from jbpm ####
        
        SET SCHEMA process;
          --### IMPORT FOREIGN SCHEMA public FROM SERVER jbpm  INTO process
             --###     LIMIT TO (NodeInstanceLog, CaseFileDataLog, CaseRoleAssignmentLog, ProcessInstanceLog, VariableInstanceLog);
               
        IMPORT FOREIGN SCHEMA public FROM SERVER jbpm INTO process OPTIONS (
              "importer.useFullSchemaName" 'false', "importer.tableTypes" 'TABLE');

        --############ Schema:EmergencyResponse ############           

        SET SCHEMA EmergencyResponse;

        -- ####TEMP  

        CREATE VIEW mission (
          id, status, incidentid, processinstanceid, responderid, responderfullname, responderhasmedicalkit, numberrescued, responderdistancepickup, responderdistancedropoff, responderdistancetotal, responsetimesecondspickup, responsetimesecondsdropoff, responsetimesecondstotal, PRIMARY KEY(id)
         ) AS 
          SELECT 
          t1.id, t1.status, t1.incidentid, t1.processinstanceid, t1.responderid, t1.responderfullname, t1.responderhasmedicalkit, t1.numberrescued, t1.responderdistancepickup, t1.responderdistancedropoff, t1.responderdistancetotal, t1.responsetimesecondspickup, t1.responsetimesecondsdropoff, t1.responsetimesecondstotal
         FROM 
         datawarehouse.missionreport t1
        
          -- ### Mission Kommander KPI Views
         CREATE VIEW totalrescued ( 
           times, numbersrescued
         ) AS
           SELECT now(),  sum(t1.numberrescued) from mission t1;

          CREATE VIEW fastesttravelvelocities ( 
           responseVelocityKmPerHr, responder, incidentId, processInstanceId
         ) AS
           select (t1.responderdistancetotal / t1.responsetimesecondstotal * 3.6) as response_velocity_km_hr  , t1.responderfullname, t1.incidentId, t1.processinstanceid 
           from mission t1 order by response_velocity_km_hr desc limit 10;

           CREATE VIEW topresponders ( 
           times, totalrescued, responder
         ) AS
           select now(), sum(t1.numberrescued) as sum, t1.responderfullname from mission t1 group by t1.responderfullname order by sum desc limit 5;     
